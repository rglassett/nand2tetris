// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Not(in=reset, out=isNotReset);
    And(a=isNotReset, b=load, out=isLoaded);

    Not(in=isLoaded, out=isNotLoaded);
    And(a=inc, b=isNotLoaded, out=isIncremented);

    Or(a=reset, b=isIncremented, out=isRecalculated);

    Or(a=reset, b=load, out=isResetOrLoaded);
    Or(a=inc, b=isResetOrLoaded, out=isReassigned);

    Mux16(a=memory, b=in, sel=load, out=calculatorInput);

    ALU(
      x=calculatorInput,
      y=false,
      zx=reset,
      nx=isIncremented,
      zy=true,
      ny=isNotReset,
      f=isRecalculated,
      no=isIncremented,
      out=calculatorOutput
    );

    Register(in=calculatorOutput, load=isReassigned, out=memory, out=out);
}
